{"ast":null,"code":"import axios from \"axios\";\nimport React from 'react';\nimport { useHistory } from \"react-router-dom\"; // return the user data from the session storage\n\nexport const getUser = () => {\n  const userStr = sessionStorage.getItem('user');\n  if (userStr) return JSON.parse(userStr);else return null;\n}; // return the token from the session storage\n\nexport const getToken = () => {\n  return sessionStorage.getItem('token') || null;\n}; // remove the token and user from the session storage\n\nexport const removeUserSession = () => {\n  sessionStorage.removeItem('token');\n  sessionStorage.removeItem('user'); //  window.location.reload();\n}; // set the token and user from the session storage\n\nexport const setUserSession = (token, user) => {\n  sessionStorage.setItem('token', token);\n  sessionStorage.setItem('user', JSON.stringify(user));\n};\nexport const validateUser = (username, values) => {\n  axios.get(`http://localhost:3002/users?username=${username}`).then(response => {\n    console.log(response.data.length);\n\n    if (response.data.length === 0) {\n      axios.post('http://localhost:3002/users', values).then(response => {\n        setUserSession('temp', username);\n        alert(\"Registration successful\"); // history.push('/about')\n\n        return true; //   props.history.push('/dashboard');\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      alert(\"Username already exists\");\n    }\n  }).catch(error => {\n    console.log(error);\n    alert(\"some error occurred\");\n  });\n};","map":{"version":3,"sources":["/Users/rohan/capstone_project/src/utils/mainUtils.js"],"names":["axios","React","useHistory","getUser","userStr","sessionStorage","getItem","JSON","parse","getToken","removeUserSession","removeItem","setUserSession","token","user","setItem","stringify","validateUser","username","values","get","then","response","console","log","data","length","post","alert","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,QAAMC,OAAO,GAAGC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAhB;AACA,MAAIF,OAAJ,EAAa,OAAOG,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAAP,CAAb,KACK,OAAO,IAAP;AACN,CAJI,C,CAML;;AACA,OAAO,MAAMK,QAAQ,GAAG,MAAM;AAC5B,SAAOJ,cAAc,CAACC,OAAf,CAAuB,OAAvB,KAAmC,IAA1C;AACD,CAFM,C,CAIP;;AACA,OAAO,MAAMI,iBAAiB,GAAG,MAAM;AACrCL,EAAAA,cAAc,CAACM,UAAf,CAA0B,OAA1B;AACAN,EAAAA,cAAc,CAACM,UAAf,CAA0B,MAA1B,EAFqC,CAGvC;AACC,CAJM,C,CAMP;;AACA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC7CT,EAAAA,cAAc,CAACU,OAAf,CAAuB,OAAvB,EAAgCF,KAAhC;AACAR,EAAAA,cAAc,CAACU,OAAf,CAAuB,MAAvB,EAA+BR,IAAI,CAACS,SAAL,CAAeF,IAAf,CAA/B;AACD,CAHM;AAIP,OAAO,MAAMG,YAAY,GAAC,CAACC,QAAD,EAAUC,MAAV,KAAmB;AAE3CnB,EAAAA,KAAK,CAACoB,GAAN,CAAW,wCAAuCF,QAAS,EAA3D,EAA8DG,IAA9D,CAAmEC,QAAQ,IAAI;AAC3EC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,MAA1B;;AACA,QAAGJ,QAAQ,CAACG,IAAT,CAAcC,MAAd,KAAuB,CAA1B,EACA;AACI1B,MAAAA,KAAK,CAAC2B,IAAN,CAAW,6BAAX,EAAyCR,MAAzC,EAAiDE,IAAjD,CAAsDC,QAAQ,IAAI;AACjEV,QAAAA,cAAc,CAAC,MAAD,EAAQM,QAAR,CAAd;AACGU,QAAAA,KAAK,CAAC,yBAAD,CAAL,CAF8D,CAG/D;;AAEA,eAAO,IAAP,CAL+D,CAMjE;AACE,OAPH,EAOKC,KAPL,CAOWC,KAAK,IAAI;AAChBP,QAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD,OATH;AAWH,KAbD,MAaK;AACDF,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACH;AAGF,GApBH,EAoBKC,KApBL,CAoBWC,KAAK,IAAI;AAChBP,IAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACAF,IAAAA,KAAK,CAAC,qBAAD,CAAL;AAED,GAxBH;AAyBD,CA3BM","sourcesContent":["import axios from \"axios\";\nimport React from 'react';\nimport { useHistory } from \"react-router-dom\";\n// return the user data from the session storage\nexport const getUser = () => {\n    const userStr = sessionStorage.getItem('user');\n    if (userStr) return JSON.parse(userStr);\n    else return null;\n  }\n  \n  // return the token from the session storage\n  export const getToken = () => {\n    return sessionStorage.getItem('token') || null;\n  }\n\n  // remove the token and user from the session storage\n  export const removeUserSession = () => {\n    sessionStorage.removeItem('token');\n    sessionStorage.removeItem('user');\n  //  window.location.reload();\n  }\n  \n  // set the token and user from the session storage\n  export const setUserSession = (token, user) => {\n    sessionStorage.setItem('token', token);\n    sessionStorage.setItem('user', JSON.stringify(user));\n  }\n  export const validateUser=(username,values)=>{\n     \n    axios.get(`http://localhost:3002/users?username=${username}`).then(response => {\n        console.log(response.data.length)\n        if(response.data.length===0)\n        {\n            axios.post('http://localhost:3002/users',values).then(response => {\n             setUserSession('temp',username)\n                alert(\"Registration successful\")\n               // history.push('/about')\n               \n               return true;\n             //   props.history.push('/dashboard');\n              }).catch(error => {\n                console.log(error);\n              })\n            \n        }else{\n            alert(\"Username already exists\")\n        }\n    \n    \n      }).catch(error => {\n        console.log(error);\n        alert(\"some error occurred\")\n        \n      });\n  }"]},"metadata":{},"sourceType":"module"}