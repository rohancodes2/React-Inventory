{"ast":null,"code":"var _jsxFileName = \"/Users/rohan/capstone_project/src/components/UpdateProducts.js\";\nimport React from 'react';\nimport { useFormik, yupToFormErrors } from 'formik';\nimport { connect } from 'react-redux';\nimport uuid from 'react-uuid';\nimport * as Yup from 'yup';\n\nconst UpdateProducts = props => {\n  const validationSchema = Yup.object({\n    productName: Yup.string().required('*Product Name is required'),\n    model: Yup.string().required('*Model is required'),\n    productDescription: Yup.string().required('*productDescription is required'),\n    price: Yup.number().required('*Price is required'),\n    quantity: Yup.number().required('*Quantity is required'),\n    author: Yup.string().required('*author is required')\n  });\n\n  if (props.product === undefined) {\n    const formik = useFormik({\n      initialValues: {\n        productName: props.product.productName,\n        model: props.product.model,\n        productDescription: props.product.productDescription,\n        price: props.product.price,\n        quantity: props.product.quantity,\n        author: props.product.author,\n        created: props.product.created,\n        updated: new Date()\n      },\n      onSubmit: values => {\n        console.log(values);\n        let x = JSON.stringify(values, null, 2); //ProductActions.addProduct(x)\n      },\n      validationSchema\n    });\n  }\n\n  console.log(\"In view details\", props.product);\n\n  if (props.product === undefined) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 8\n      }\n    }, \"Please select an item from Home tab to view details or \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/about\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 68\n      }\n    }, \"Click here to redirect\"));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: 1000\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-group\",\n      onSubmit: formik.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, \"Update Products\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, \"Product Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"name\",\n      name: \"productName\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.productName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }), formik.errors.productName && formik.touched.productName ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 63\n      }\n    }, /*#__PURE__*/React.createElement(\"h7\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 68\n      }\n    }, formik.errors.productName)) : null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 139\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"model\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, \"Model\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"model\",\n      name: \"model\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.model,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }), formik.errors.model && formik.touched.model ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(\"h7\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 53\n      }\n    }, formik.errors.model)) : null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 118\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"productDescription\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }\n    }, \"Product Description\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"productDescription\",\n      name: \"productDescription\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.productDescription,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }), formik.errors.productDescription && formik.touched.productDescription ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 74\n      }\n    }, /*#__PURE__*/React.createElement(\"h7\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 79\n      }\n    }, formik.errors.productDescription)) : null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 157\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }\n    }, \"Price\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"price\",\n      name: \"price\",\n      type: \"number\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.price,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }\n    }), formik.errors.price && formik.touched.price ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h7\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 54\n      }\n    }, formik.errors.price)) : null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"quantity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, \"Quantity\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"quantity\",\n      name: \"quantity\",\n      type: \"number\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.quantity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }), formik.errors.quantity && formik.touched.quantity ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 54\n      }\n    }, /*#__PURE__*/React.createElement(\"h7\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 59\n      }\n    }, formik.errors.quantity)) : null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 127\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 6\n      }\n    }, \"Product Description\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"author\",\n      name: \"author\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.author,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }), formik.errors.author && formik.touched.author ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 50\n      }\n    }, /*#__PURE__*/React.createElement(\"h7\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 55\n      }\n    }, formik.errors.author)) : null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 121\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"created\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 2\n      }\n    }, \"  Created on:  \", formik.values.created), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"updated\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 6\n      }\n    }, \"Last Updated on:  \", formik.values.updated.toString())), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, \"Submit\")));\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products,\n    product: state.product\n  };\n};\n\nexport default connect(mapStateToProps)(UpdateProducts);","map":{"version":3,"sources":["/Users/rohan/capstone_project/src/components/UpdateProducts.js"],"names":["React","useFormik","yupToFormErrors","connect","uuid","Yup","UpdateProducts","props","validationSchema","object","productName","string","required","model","productDescription","price","number","quantity","author","product","undefined","formik","initialValues","created","updated","Date","onSubmit","values","console","log","x","JSON","stringify","width","handleSubmit","handleChange","handleBlur","errors","touched","color","toString","mapStateToProps","state","products"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,eAApB,QAA2C,QAA3C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AACA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAMC,gBAAgB,GAAGH,GAAG,CAACI,MAAJ,CACxB;AACIC,IAAAA,WAAW,EAAEL,GAAG,CAACM,MAAJ,GAAaC,QAAb,CACT,2BADS,CADjB;AAIIC,IAAAA,KAAK,EAAER,GAAG,CAACM,MAAJ,GAAaC,QAAb,CACN,oBADM,CAJX;AAOIE,IAAAA,kBAAkB,EAAET,GAAG,CAACM,MAAJ,GAAaC,QAAb,CACnB,iCADmB,CAPxB;AAUIG,IAAAA,KAAK,EAAEV,GAAG,CAACW,MAAJ,GAAaJ,QAAb,CACN,oBADM,CAVX;AAaIK,IAAAA,QAAQ,EAAEZ,GAAG,CAACW,MAAJ,GAAaJ,QAAb,CACT,uBADS,CAbd;AAgBIM,IAAAA,MAAM,EAAEb,GAAG,CAACM,MAAJ,GAAaC,QAAb,CACP,qBADO;AAhBZ,GADwB,CAAzB;;AAqBC,MAAGL,KAAK,CAACY,OAAN,KAAgBC,SAAnB,EAA6B;AAC7B,UAAMC,MAAM,GAAGpB,SAAS,CAAC;AACxBqB,MAAAA,aAAa,EAAC;AACZZ,QAAAA,WAAW,EAAEH,KAAK,CAACY,OAAN,CAAcT,WADf;AAEZG,QAAAA,KAAK,EAACN,KAAK,CAACY,OAAN,CAAcN,KAFR;AAGZC,QAAAA,kBAAkB,EAACP,KAAK,CAACY,OAAN,CAAcL,kBAHrB;AAIZC,QAAAA,KAAK,EAACR,KAAK,CAACY,OAAN,CAAcJ,KAJR;AAKZE,QAAAA,QAAQ,EAACV,KAAK,CAACY,OAAN,CAAcF,QALX;AAMZC,QAAAA,MAAM,EAACX,KAAK,CAACY,OAAN,CAAcD,MANT;AAOZK,QAAAA,OAAO,EAAChB,KAAK,CAACY,OAAN,CAAcI,OAPV;AAQZC,QAAAA,OAAO,EAAC,IAAIC,IAAJ;AARI,OADU;AAYxBC,MAAAA,QAAQ,EAAEC,MAAM,IAAI;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,YAAIG,CAAC,GAACC,IAAI,CAACC,SAAL,CAAeL,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAN,CAFmB,CAGnB;AAEA,OAjBuB;AAkBxBnB,MAAAA;AAlBwB,KAAD,CAAxB;AAqBF;;AACCoB,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BtB,KAAK,CAACY,OAApC;;AACA,MAAGZ,KAAK,CAACY,OAAN,KAAgBC,SAAnB,EAA6B;AAC/B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAA4D;AAAG,MAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA5D,CAAP;AAEC,GAHC,MAGG;AAEH,wBACE;AAAK,MAAA,KAAK,EAAE;AAACa,QAAAA,KAAK,EAAC;AAAP,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAM,MAAA,SAAS,EAAC,YAAhB;AAA4B,MAAA,QAAQ,EAAEZ,MAAM,CAACa,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AACC,MAAA,SAAS,EAAC,cADX;AAEE,MAAA,EAAE,EAAC,MAFL;AAGE,MAAA,IAAI,EAAC,aAHP;AAIE,MAAA,IAAI,EAAC,MAJP;AAME,MAAA,QAAQ,EAAEb,MAAM,CAACc,YANnB;AAOE,MAAA,MAAM,EAAEd,MAAM,CAACe,UAPjB;AAQE,MAAA,KAAK,EAAEf,MAAM,CAACM,MAAP,CAAcjB,WARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAaGW,MAAM,CAACgB,MAAP,CAAc3B,WAAd,IAA4BW,MAAM,CAACiB,OAAP,CAAe5B,WAA3C,gBAAuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAI,MAAA,KAAK,EAAE;AAAC6B,QAAAA,KAAK,EAAE;AAAR,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BlB,MAAM,CAACgB,MAAP,CAAc3B,WAA1C,CAAL,CAAvD,GAA8H,IAbjI,eAasI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbtI,eAcE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAdF,eAeE;AACA,MAAA,SAAS,EAAC,cADV;AAEE,MAAA,EAAE,EAAC,OAFL;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,IAAI,EAAC,MAJP;AAME,MAAA,QAAQ,EAAEW,MAAM,CAACc,YANnB;AAOE,MAAA,MAAM,EAAEd,MAAM,CAACe,UAPjB;AAQE,MAAA,KAAK,EAAEf,MAAM,CAACM,MAAP,CAAcd,KARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAyBCQ,MAAM,CAACgB,MAAP,CAAcxB,KAAd,IAAqBQ,MAAM,CAACiB,OAAP,CAAezB,KAApC,gBAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAI,MAAA,KAAK,EAAE;AAAC0B,QAAAA,KAAK,EAAE;AAAR,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BlB,MAAM,CAACgB,MAAP,CAAcxB,KAA1C,CAAL,CAA1C,GAA2G,IAzB5G,eAyBiH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBjH,eA0BA;AAAO,MAAA,OAAO,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BA1BA,eA2BE;AACA,MAAA,SAAS,EAAC,cADV;AAEE,MAAA,EAAE,EAAC,oBAFL;AAGE,MAAA,IAAI,EAAC,oBAHP;AAIE,MAAA,IAAI,EAAC,MAJP;AAME,MAAA,QAAQ,EAAEQ,MAAM,CAACc,YANnB;AAOE,MAAA,MAAM,EAAEd,MAAM,CAACe,UAPjB;AAQE,MAAA,KAAK,EAAEf,MAAM,CAACM,MAAP,CAAcb,kBARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BF,EAqCCO,MAAM,CAACgB,MAAP,CAAcvB,kBAAd,IAAkCO,MAAM,CAACiB,OAAP,CAAexB,kBAAjD,gBAAoE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAI,MAAA,KAAK,EAAE;AAACyB,QAAAA,KAAK,EAAE;AAAR,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BlB,MAAM,CAACgB,MAAP,CAAcvB,kBAA1C,CAAL,CAApE,GAAkJ,IArCnJ,eAqCwJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArCxJ,eAsCA;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAtCA,eAuCA;AACA,MAAA,SAAS,EAAC,cADV;AAEI,MAAA,EAAE,EAAC,OAFP;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,IAAI,EAAC,QAJT;AAMI,MAAA,QAAQ,EAAEO,MAAM,CAACc,YANrB;AAOI,MAAA,MAAM,EAAEd,MAAM,CAACe,UAPnB;AAQI,MAAA,KAAK,EAAEf,MAAM,CAACM,MAAP,CAAcZ,KARzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvCA,EAiDEM,MAAM,CAACgB,MAAP,CAActB,KAAd,IAAqBM,MAAM,CAACiB,OAAP,CAAevB,KAApC,gBAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAI,MAAA,KAAK,EAAE;AAACwB,QAAAA,KAAK,EAAE;AAAR,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BlB,MAAM,CAACgB,MAAP,CAActB,KAA1C,CAAL,CAA1C,GAA2G,IAjD7G,eAkDI;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlDJ,eAmDE;AACA,MAAA,SAAS,EAAC,cADV;AAEE,MAAA,EAAE,EAAC,UAFL;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,IAAI,EAAC,QAJP;AAME,MAAA,QAAQ,EAAEM,MAAM,CAACc,YANnB;AAOE,MAAA,MAAM,EAAEd,MAAM,CAACe,UAPjB;AAQE,MAAA,KAAK,EAAEf,MAAM,CAACM,MAAP,CAAcV,QARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnDF,EA6DCI,MAAM,CAACgB,MAAP,CAAcpB,QAAd,IAAwBI,MAAM,CAACiB,OAAP,CAAerB,QAAvC,gBAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAI,MAAA,KAAK,EAAE;AAACsB,QAAAA,KAAK,EAAE;AAAR,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BlB,MAAM,CAACgB,MAAP,CAAcpB,QAA1C,CAAL,CAAhD,GAAoH,IA7DrH,eA6D0H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7D1H,eAiEC;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAjED,eAkEE;AACA,MAAA,SAAS,EAAC,cADV;AAEE,MAAA,EAAE,EAAC,QAFL;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,IAAI,EAAC,MAJP;AAME,MAAA,QAAQ,EAAEI,MAAM,CAACc,YANnB;AAOE,MAAA,MAAM,EAAEd,MAAM,CAACe,UAPjB;AAQE,MAAA,KAAK,EAAEf,MAAM,CAACM,MAAP,CAAcT,MARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlEF,EA4ECG,MAAM,CAACgB,MAAP,CAAcnB,MAAd,IAAsBG,MAAM,CAACiB,OAAP,CAAepB,MAArC,gBAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAI,MAAA,KAAK,EAAE;AAACqB,QAAAA,KAAK,EAAE;AAAR,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BlB,MAAM,CAACgB,MAAP,CAAcnB,MAA1C,CAAL,CAA5C,GAA8G,IA5E/G,eA4EoH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5EpH,eA6EH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAyCG,MAAM,CAACM,MAAP,CAAcJ,OAAvD,CADA,eAEI;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA4CF,MAAM,CAACM,MAAP,CAAcH,OAAd,CAAsBgB,QAAtB,EAA5C,CAFJ,CA7EG,eAgFE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,wBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhFF,CADA,CADF;AAuFD;AACA,CA3ID;;AA6IA,MAAMC,eAAe,GAAGC,KAAK,IAAG;AAC5B,SAAO;AACLC,IAAAA,QAAQ,EAAED,KAAK,CAACC,QADX;AAELxB,IAAAA,OAAO,EAACuB,KAAK,CAACvB;AAFT,GAAP;AAID,CALH;;AAOE,eAAehB,OAAO,CAACsC,eAAD,CAAP,CAAyBnC,cAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { useFormik, yupToFormErrors } from 'formik';\nimport {connect} from 'react-redux'\nimport uuid from 'react-uuid'\nimport * as Yup from 'yup';\nconst UpdateProducts = (props) => {\n  const validationSchema = Yup.object(\n   {\n       productName: Yup.string().required(\n           '*Product Name is required'\n       ),\n       model: Yup.string().required(\n        '*Model is required'\n       ),\n       productDescription: Yup.string().required(\n        '*productDescription is required'\n       ),\n       price: Yup.number().required(\n        '*Price is required'\n       ),\n       quantity: Yup.number().required(\n        '*Quantity is required'\n       ),\n       author: Yup.string().required(\n        '*author is required'\n       ),\n   })\n   if(props.product===undefined){\n   const formik = useFormik({\n    initialValues:{\n      productName: props.product.productName,\n      model:props.product.model,\n      productDescription:props.product.productDescription,\n      price:props.product.price,\n      quantity:props.product.quantity,\n      author:props.product.author,\n      created:props.product.created,\n      updated:new Date(),\n      \n    },\n    onSubmit: values => {\n      console.log(values)\n     let x=JSON.stringify(values, null, 2);\n     //ProductActions.addProduct(x)\n    \n    },\n    validationSchema\n\n  });\n}\n  console.log(\"In view details\",props.product)\n  if(props.product===undefined){\nreturn <div>Please select an item from Home tab to view details or <a href='/about'>Click here to redirect</a></div>\n\n}else{\n    \n  return (\n    <div style={{width:1000}}>\n    <form className='form-group'onSubmit={formik.handleSubmit}>\n      <h1>Update Products</h1>\n      <label htmlFor=\"name\">Product Name</label>\n      <input\n       className='form-control'\n        id=\"name\"\n        name=\"productName\"\n        type=\"text\"\n       \n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.productName}\n      /> \n      {formik.errors.productName &&formik.touched.productName?<div><h7 style={{color: \"red\"}}>{formik.errors.productName}</h7></div>:null}<br></br>\n      <label htmlFor=\"model\">Model</label>\n      <input\n      className='form-control'\n        id=\"model\"\n        name=\"model\"\n        type=\"text\"\n       \n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.model}\n      /> \n    {formik.errors.model&&formik.touched.model?<div><h7 style={{color: \"red\"}}>{formik.errors.model}</h7></div>:null}<br></br>\n    <label htmlFor=\"productDescription\">Product Description</label>\n      <input\n      className='form-control'\n        id=\"productDescription\"\n        name=\"productDescription\"\n        type=\"text\"\n       \n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.productDescription}\n      /> \n    {formik.errors.productDescription&&formik.touched.productDescription?<div><h7 style={{color: \"red\"}}>{formik.errors.productDescription}</h7></div>:null}<br></br>\n    <label htmlFor=\"price\">Price</label>\n    <input\n    className='form-control'\n        id=\"price\"\n        name=\"price\"\n        type=\"number\"\n     \n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.price}\n      />\n     {formik.errors.price&&formik.touched.price?<div><h7 style={{color: \"red\"}}>{formik.errors.price}</h7></div>:null}\n        <label htmlFor=\"quantity\">Quantity</label>\n      <input\n      className='form-control'\n        id=\"quantity\"\n        name=\"quantity\"\n        type=\"number\"\n        \n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.quantity}\n      /> \n    {formik.errors.quantity&&formik.touched.quantity?<div><h7 style={{color: \"red\"}}>{formik.errors.quantity}</h7></div>:null}<br></br>\n       \n\n     \n     <label htmlFor=\"author\">Product Description</label>\n      <input\n      className='form-control'\n        id=\"author\"\n        name=\"author\"\n        type=\"text\"\n       \n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.author}\n      /> \n    {formik.errors.author&&formik.touched.author?<div><h7 style={{color: \"red\"}}>{formik.errors.author}</h7></div>:null}<br></br>\n <p>\n <label htmlFor=\"created\">  Created on:  {formik.values.created}</label>\n     <label htmlFor=\"updated\">Last Updated on:  {formik.values.updated.toString()}</label></p>\n      <button type=\"submit\" className='btn btn-primary btn-lg'>Submit</button>\n    </form>\n    </div>\n  );\n\n}\n};\n\nconst mapStateToProps = state =>{\n    return {\n      products: state.products,\n      product:state.product\n    }\n  }\n\n  export default connect(mapStateToProps)(UpdateProducts)\n"]},"metadata":{},"sourceType":"module"}