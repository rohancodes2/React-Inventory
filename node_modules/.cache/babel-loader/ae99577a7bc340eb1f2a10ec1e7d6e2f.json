{"ast":null,"code":"var _jsxFileName = \"/Users/rohan/capstone_project/src/components/Register.js\";\nimport React, { useState } from \"react\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport { useFormik, yupToFormErrors } from 'formik';\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { setUserSession } from \"../utils/mainUtils\";\n\nconst Register = props => {\n  const history = useHistory();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const validationSchema = Yup.object({\n    username: Yup.string().required('*Username is required'),\n    password: Yup.string().required('*Password is required'),\n    password1: Yup.string().required('* Re-enter Password'),\n    id: Yup.string().required('* Office Id required')\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      username: '',\n      password: '',\n      password1: '',\n      id: ''\n    },\n    onSubmit: values => {\n      console.log(values);\n\n      if (values.password != values.password1) {\n        alert('passwords dont match');\n      } else {\n        setError(null);\n        setLoading(true); //     axios.get(`http://localhost:3002/users?username=${values.username}&&password=${values.password}`).then(response => {\n        //       setLoading(false);\n        //       console.log(response.data.id)\n        //       if(response.data[0]!=undefined){\n        //       setUserSession(response.data[0].id, response.data[0].username)\n        //       history.push('/products/view');\n        //       window.location.reload();\n        //       }else{\n        //           alert(\"enter right credentials\")\n        //       }\n        //    //   props.history.push('/dashboard');\n        //     }).catch(error => {\n        //       setLoading(false);\n        //       console.log(error);\n        //       if (error.response.status === 401) setError(error.response.data.message);\n        //       else setError(\"Something went wrong. Please try again later.\");\n        //     });\n        //   // let x=JSON.stringify(values, null, 2);\n        //ProductActions.addProduct(x)\n      }\n    },\n    validationSchema\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 1000\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-group\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"LogIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 6\n    }\n  }, \"Register \"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 6\n    }\n  }, \"Enter Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"name\",\n    name: \"name\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), formik.errors.name && formik.touched.name ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 48\n    }\n  }, /*#__PURE__*/React.createElement(\"h7\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 53\n    }\n  }, formik.errors.name)) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 117\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"Enter Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"username\",\n    name: \"username\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), formik.errors.username && formik.touched.username ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 56\n    }\n  }, /*#__PURE__*/React.createElement(\"h7\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 61\n    }\n  }, formik.errors.username)) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 129\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Enter Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), formik.errors.password && formik.touched.password ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 56\n    }\n  }, /*#__PURE__*/React.createElement(\"h7\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 61\n    }\n  }, formik.errors.password)) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 129\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, \"Re-enter Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"password1\",\n    name: \"password1\",\n    type: \"password1\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), formik.errors.password1 && formik.touched.password1 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(\"h7\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 63\n    }\n  }, formik.errors.password1)) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 132\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, \"Enter Office ID\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"id\",\n    name: \"id\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }), formik.errors.id && formik.touched.id ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 44\n    }\n  }, /*#__PURE__*/React.createElement(\"h7\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 49\n    }\n  }, formik.errors.id)) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 111\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, \"Register\")), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/signIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, \"Back to Login\"));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(null, mapDispatchToProps)(Register);","map":{"version":3,"sources":["/Users/rohan/capstone_project/src/components/Register.js"],"names":["React","useState","Route","useHistory","useFormik","yupToFormErrors","Yup","connect","axios","setUserSession","Register","props","history","error","setError","loading","setLoading","validationSchema","object","username","string","required","password","password1","id","formik","initialValues","name","onSubmit","values","console","log","alert","width","handleSubmit","handleChange","handleBlur","errors","touched","color","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["\nimport React, { useState } from \"react\";\nimport { Route, useHistory } from \"react-router-dom\";\n  import { useFormik, yupToFormErrors } from 'formik';\n  import * as Yup from 'yup';\n  import {connect} from 'react-redux'\n  import axios from 'axios';\nimport { setUserSession } from \"../utils/mainUtils\";\n\n  const Register = (props) => {\n      const history = useHistory();\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const validationSchema = Yup.object(\n     {\n         username: Yup.string().required(\n             '*Username is required'\n         ),\n        password: Yup.string().required(\n          '*Password is required'\n         ),\n         password1: Yup.string().required(\n            '* Re-enter Password'\n           ),\n           id: Yup.string().required(\n            '* Office Id required'\n           ),\n     })\n    \n    const formik = useFormik({\n      initialValues:{\n          name:'',\n        username:'',\n        password:'',\n        password1:'',\n        id:''\n  \n      },\n      onSubmit: values => {\n        console.log(values)\n    if  (values.password!=values.password1)\n{   \n    alert('passwords dont match')\n   \n}else{\n\n        setError(null);\n        setLoading(true);\n    //     axios.get(`http://localhost:3002/users?username=${values.username}&&password=${values.password}`).then(response => {\n    //       setLoading(false);\n    //       console.log(response.data.id)\n    //       if(response.data[0]!=undefined){\n    //       setUserSession(response.data[0].id, response.data[0].username)\n    //       history.push('/products/view');\n    //       window.location.reload();\n    //       }else{\n    //           alert(\"enter right credentials\")\n    //       }\n         \n         \n    //    //   props.history.push('/dashboard');\n    //     }).catch(error => {\n    //       setLoading(false);\n    //       console.log(error);\n    //       if (error.response.status === 401) setError(error.response.data.message);\n    //       else setError(\"Something went wrong. Please try again later.\");\n    //     });\n    //   // let x=JSON.stringify(values, null, 2);\n       //ProductActions.addProduct(x)\n      }},\n      validationSchema\n  \n    });\n   \n    return (\n      <div style={{width:1000}}>\n          \n     <form className='form-group'onSubmit={formik.handleSubmit}>\n     <label htmlFor=\"LogIn\" >Register </label>\n     <label htmlFor=\"name\">Enter Name</label>\n        <input\n        className='form-control'\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.name}\n        /> \n      {formik.errors.name&&formik.touched.name?<div><h7 style={{color: \"red\"}}>{formik.errors.name}</h7></div>:null}<br></br>\n      <label htmlFor=\"username\">Enter Username</label>\n        <input\n        className='form-control'\n          id=\"username\"\n          name=\"username\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.username}\n        /> \n      {formik.errors.username&&formik.touched.username?<div><h7 style={{color: \"red\"}}>{formik.errors.username}</h7></div>:null}<br></br>\n       \n      \n      <label htmlFor=\"password\">Enter Password</label>\n        <input\n        className='form-control'\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password}\n        /> \n      {formik.errors.password&&formik.touched.password?<div><h7 style={{color: \"red\"}}>{formik.errors.password}</h7></div>:null}<br></br>\n      <label htmlFor=\"password1\">Re-enter Password</label>\n        <input\n        className='form-control'\n          id=\"password1\"\n          name=\"password1\"\n          type=\"password1\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password1}\n        /> \n      {formik.errors.password1&&formik.touched.password1?<div><h7 style={{color: \"red\"}}>{formik.errors.password1}</h7></div>:null}<br></br>\n      <label htmlFor=\"id\">Enter Office ID</label>\n        <input\n        className='form-control'\n          id=\"id\"\n          name=\"id\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.id}\n        /> \n      {formik.errors.id&&formik.touched.id?<div><h7 style={{color: \"red\"}}>{formik.errors.id}</h7></div>:null}<br></br>\n        <button type=\"submit\" className='btn btn-primary btn-lg'>Register</button>\n      </form>\n      <a href='/signIn'>Back to Login</a>\n      </div>\n    );\n  \n    \n  };\n  const mapDispatchToProps = dispatch =>{\n      return {\n     \n      }\n    }\n\n    export default connect(null,mapDispatchToProps)(Register)\n  \n\n\n"]},"metadata":{},"sourceType":"module"}