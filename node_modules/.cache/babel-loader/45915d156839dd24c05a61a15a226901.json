{"ast":null,"code":"var _jsxFileName = \"/Users/rohan/capstone_project/src/components/EditProfile.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport './Register.css';\nimport { useFormik, yupToFormErrors } from 'formik';\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { setUserSession, validateUser } from \"../utils/mainUtils\";\nimport { updateUser } from \"../Redux/Actions/ActionCreators\";\n\nconst EditProfile = props => {\n  const history = useHistory();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState(JSON.parse(localStorage.getItem('data')));\n  useEffect(() => {\n    console.log(data);\n  });\n  const validationSchema = Yup.object({\n    fname: Yup.string().required('*First name is required'),\n    lname: Yup.string().required('*Last name is required'),\n    username: Yup.string().email().required('*Username is required'),\n    password: Yup.string().required('*Password is required'),\n    password1: Yup.string().required('* Re-enter Password'),\n    location: Yup.string().required('* Location required')\n  });\n  const formik = useFormik({\n    initialValues: {\n      fname: '',\n      lname: '',\n      username: '',\n      password: '',\n      password1: '',\n      location: ''\n    },\n    onSubmit: values => {\n      console.log(values);\n\n      if (values.password != values.password1) {\n        alert('passwords dont match');\n      } else {// let x=JSON.stringify(values, null, 2);\n        //  ProductActions.addProduct(x)\n      }\n    },\n    validationSchema\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-group4\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      alignSelf: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }\n  }, \"  Profile \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 55\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"fname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }\n  }, \"First Name \"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control pro\",\n    id: \"fname\",\n    name: \"fname\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.fname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 8\n    }\n  }), formik.errors.fname && formik.touched.fname ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 50\n    }\n  }, /*#__PURE__*/React.createElement(\"h7\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 55\n    }\n  }, formik.errors.fname)) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 120\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"lname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"Last Name \"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control pro\",\n    id: \"lname\",\n    name: \"lname\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.lname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 8\n    }\n  }), formik.errors.lname && formik.touched.lname ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 50\n    }\n  }, /*#__PURE__*/React.createElement(\"h7\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 55\n    }\n  }, formik.errors.lname)) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 120\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, \"Enter Email ID :\", formik.values.username), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Enter Current Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control pro textcolorx\",\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), formik.errors.password && formik.touched.password ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 56\n    }\n  }, /*#__PURE__*/React.createElement(\"h7\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 61\n    }\n  }, formik.errors.password)) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 129\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, \"Enter New Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control pro textcolorx\",\n    id: \"password1\",\n    name: \"password1\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), formik.errors.password1 && formik.touched.password1 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(\"h7\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 63\n    }\n  }, formik.errors.password1)) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 132\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control pro textcolorx\",\n    id: \"location\",\n    name: \"location\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }), formik.errors.location && formik.touched.location ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 56\n    }\n  }, /*#__PURE__*/React.createElement(\"h7\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 61\n    }\n  }, formik.errors.location)) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 129\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-lg cbacx text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/signIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, \"Back to Login\")));\n};\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products,\n    product: state.product\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUser: values => dispatch(updateUser(values))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfile);","map":{"version":3,"sources":["/Users/rohan/capstone_project/src/components/EditProfile.js"],"names":["React","useState","useEffect","Route","useHistory","useFormik","yupToFormErrors","Yup","connect","axios","setUserSession","validateUser","updateUser","EditProfile","props","history","error","setError","loading","setLoading","data","setData","JSON","parse","localStorage","getItem","console","log","validationSchema","object","fname","string","required","lname","username","email","password","password1","location","formik","initialValues","onSubmit","values","alert","handleSubmit","alignSelf","handleChange","handleBlur","errors","touched","color","mapStateToProps","state","products","product","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["\nimport React, { useState,useEffect  } from \"react\";\nimport { Route, useHistory} from \"react-router-dom\";\nimport  './Register.css';\n  import { useFormik, yupToFormErrors } from 'formik';\n  import * as Yup from 'yup';\n  import {connect} from 'react-redux'\n  import axios from 'axios';\nimport { setUserSession, validateUser } from \"../utils/mainUtils\";\nimport { updateUser } from \"../Redux/Actions/ActionCreators\";\n\n  const EditProfile = (props) => {\n      const history = useHistory();\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [data,setData]=useState(JSON.parse(localStorage.getItem('data')))\n    useEffect(()=>{\n      console.log(data);\n    })\n    const validationSchema = Yup.object(\n     {\n       fname: Yup.string().required(\n            '*First name is required'\n        ),\n        lname: Yup.string().required(\n          '*Last name is required'\n      ),\n         username: Yup.string().email().required(\n             '*Username is required'\n         ),\n        password: Yup.string().required(\n          '*Password is required'\n         ),\n         password1: Yup.string().required(\n            '* Re-enter Password'\n           ),\n           location: Yup.string().required(\n            '* Location required'\n           ),\n     })\n    \n    const formik = useFormik({\n      initialValues:{\n          fname:'',\n          lname:'',\n        username:'',\n        password:'',\n        password1:'',\n        location:''\n  \n      },\n      onSubmit: values => {\n        console.log(values)\n    if  (values.password!=values.password1)\n{   \n    alert('passwords dont match')\n   \n}else{\n      \n      // let x=JSON.stringify(values, null, 2);\n     //  ProductActions.addProduct(x)\n      }},\n      validationSchema\n  \n    });\n   \n    return (\n      <div  className='main4'>\n          \n     <form className='form-group4'onSubmit={formik.handleSubmit}>\n     <h4 style={{alignSelf:'center'}} >  Profile </h4><br></br>\n     <label htmlFor=\"fname\">First Name </label>\n       <input\n        className='form-control pro'\n          id=\"fname\"\n          name=\"fname\"\n          type=\"text\"\n        \n          \n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.fname}\n        /> \n      {formik.errors.fname&&formik.touched.fname?<div><h7 style={{color: \"red\"}}>{formik.errors.fname}</h7></div>:null}<br></br>\n      <label htmlFor=\"lname\">Last Name </label>\n       <input\n        className='form-control pro'\n          id=\"lname\"\n          name=\"lname\"\n          type=\"text\"\n        \n          \n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.lname}\n        /> \n      {formik.errors.lname&&formik.touched.lname?<div><h7 style={{color: \"red\"}}>{formik.errors.lname}</h7></div>:null}<br></br>\n    <label htmlFor=\"username\">Enter Email ID :{formik.values.username}</label>\n        \n       <br></br>\n     \n       \n      \n      <label htmlFor=\"password\">Enter Current Password</label>\n        <input\n       className='form-control pro textcolorx'\n          id=\"password\"\n          name=\"password\"\n          type=\"password\" \n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password}\n        /> \n      {formik.errors.password&&formik.touched.password?<div><h7 style={{color: \"red\"}}>{formik.errors.password}</h7></div>:null}<br></br>\n      <label htmlFor=\"password1\">Enter New Password</label>\n        <input\n        className='form-control pro textcolorx'\n          id=\"password1\"\n          name=\"password1\"\n          type=\"password\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password1}\n        /> \n      {formik.errors.password1&&formik.touched.password1?<div><h7 style={{color: \"red\"}}>{formik.errors.password1}</h7></div>:null}<br></br>\n      <label htmlFor=\"location\">Location</label>\n        <input\n        className='form-control pro textcolorx'\n          id=\"location\"\n          name=\"location\"\n          type=\"text\"\n       \n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.location}\n        /> \n      {formik.errors.location&&formik.touched.location?<div><h7 style={{color: \"red\"}}>{formik.errors.location}</h7></div>:null}<br></br>\n        <button type=\"submit\" className='btn btn-lg cbacx text-white'>Register</button>\n        <a href='/signIn'>Back to Login</a>\n      </form>\n    \n      </div>\n    );\n  \n    \n  };\n  const mapStateToProps = state =>{\n    return {\n      products: state.products,\n      product:state.product\n    }\n  }\n  const mapDispatchToProps = dispatch =>{\n    return {\n      updateUser:(values)=>dispatch(updateUser(values))\n    }\n  }\n\n  export default connect(mapStateToProps,mapDispatchToProps)(EditProfile)\n\n\n"]},"metadata":{},"sourceType":"module"}