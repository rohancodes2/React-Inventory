{"ast":null,"code":"var _jsxFileName = \"/Users/rohan/capstone_project/src/components/SignIn.js\";\nimport React from \"react\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport { useFormik, yupToFormErrors } from 'formik';\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\n\nconst SignIn = props => {\n  const validationSchema = Yup.object({\n    username: Yup.string().required('*Username is required'),\n    password: Yup.string().required('*Password is required')\n  });\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    onSubmit: values => {\n      console.log(values); // let x=JSON.stringify(values, null, 2);\n      //ProductActions.addProduct(x)\n    },\n    validationSchema\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 1000\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-group\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Username:\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"username\",\n    name: \"username\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), formik.errors.username && formik.touched.username ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 56\n    }\n  }, /*#__PURE__*/React.createElement(\"h7\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 61\n    }\n  }, formik.errors.username)) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 129\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), formik.errors.password && formik.touched.password ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 56\n    }\n  }, /*#__PURE__*/React.createElement(\"h7\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 61\n    }\n  }, formik.errors.password)) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 129\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/rohan/capstone_project/src/components/SignIn.js"],"names":["React","Route","useHistory","useFormik","yupToFormErrors","Yup","connect","SignIn","props","validationSchema","object","username","string","required","password","formik","initialValues","onSubmit","values","console","log","width","handleSubmit","handleChange","handleBlur","errors","touched","color","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Route, useHistory } from \"react-router-dom\";\n  import { useFormik, yupToFormErrors } from 'formik';\n  import * as Yup from 'yup';\n  import {connect} from 'react-redux'\n\n  const SignIn = (props) => {\n    const validationSchema = Yup.object(\n     {\n         username: Yup.string().required(\n             '*Username is required'\n         ),\n        password: Yup.string().required(\n          '*Password is required'\n         ),\n     })\n    \n    const formik = useFormik({\n      initialValues:{\n        username:'',\n        password:''\n  \n      },\n      onSubmit: values => {\n        console.log(values)\n        \n      // let x=JSON.stringify(values, null, 2);\n       //ProductActions.addProduct(x)\n      },\n      validationSchema\n  \n    });\n   \n    return (\n      <div style={{width:1000}}>\n     <form className='form-group'onSubmit={formik.handleSubmit}>\n      <label htmlFor=\"username\">Username:</label>\n        <input\n        className='form-control'\n          id=\"username\"\n          name=\"username\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.username}\n        /> \n      {formik.errors.username&&formik.touched.username?<div><h7 style={{color: \"red\"}}>{formik.errors.username}</h7></div>:null}<br></br>\n       \n       <label htmlFor=\"password\">Password</label>\n        <input\n        className='form-control'\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password}\n        /> \n      {formik.errors.password&&formik.touched.password?<div><h7 style={{color: \"red\"}}>{formik.errors.password}</h7></div>:null}<br></br>\n        <button type=\"submit\" className='btn btn-primary btn-lg'>Submit</button>\n      </form>\n      </div>\n    );\n  \n    \n  };\n  const mapDispatchToProps = dispatch =>{\n      return {\n     \n      }\n    }\n    \n    export default connect(null,mapDispatchToProps)(SignIn)\n  \n\n\n"]},"metadata":{},"sourceType":"module"}