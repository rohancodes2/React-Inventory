{"ast":null,"code":"var _jsxFileName = \"/Users/rohan/capstone_project/src/components/AddProducts.js\";\nimport React from 'react';\nimport { useFormik, yupToFormErrors } from 'formik';\nimport * as Yup from 'yup';\n\nconst Addproducts = () => {\n  const validationSchema = Yup.object({\n    ProductName: Yup.string().required('*Product Name is required'),\n    Quantity: Yup.number().required('*Quantity is required'),\n    Price: Yup.number().required('*Price is required')\n  });\n  const formik = useFormik({\n    initialValues: {\n      ProductName: '',\n      Price: '',\n      Quantity: ''\n    },\n    onSubmit: values => {\n      let x = JSON.stringify(values, null, 2);\n      ProductActions.addProduct(x);\n    },\n    validationSchema\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-control\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Add Products\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    name: \"ProductName\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), formik.errors.name && formik.touched.name ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"h7\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 54\n    }\n  }, formik.errors.name)) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 118\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"quantity\",\n    name: \"Quantity\",\n    type: \"number\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.quantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), formik.errors.quantity && formik.touched.quantity ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 54\n    }\n  }, /*#__PURE__*/React.createElement(\"h7\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 59\n    }\n  }, formik.errors.quantity)) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 127\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"price\",\n    name: \"Price\",\n    type: \"number\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), formik.errors.price && formik.touched.price ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"h7\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 54\n    }\n  }, formik.errors.price)) : null, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n};\n\nexport default Addproducts;","map":{"version":3,"sources":["/Users/rohan/capstone_project/src/components/AddProducts.js"],"names":["React","useFormik","yupToFormErrors","Yup","Addproducts","validationSchema","object","ProductName","string","required","Quantity","number","Price","formik","initialValues","onSubmit","values","x","JSON","stringify","ProductActions","addProduct","handleSubmit","handleChange","handleBlur","name","errors","touched","color","quantity","price"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useFormik, yupToFormErrors } from 'formik';\n\nimport * as Yup from 'yup';\nconst Addproducts = () => {\n  const validationSchema = Yup.object(\n   {\n       ProductName: Yup.string().required(\n           '*Product Name is required'\n       ),\n       Quantity: Yup.number().required(\n        '*Quantity is required'\n       ),\n       Price: Yup.number().required(\n        '*Price is required'\n       )\n   })\n\n  const formik = useFormik({\n    initialValues:{\n      ProductName: '',\n      Price:'',\n      Quantity:''\n    },\n    onSubmit: values => {\n     let x=JSON.stringify(values, null, 2);\n     ProductActions.addProduct(x)\n    \n    },\n    validationSchema\n\n  });\n \n  return (\n    <form className='form-control'onSubmit={formik.handleSubmit}>\n      <h1>Add Products</h1>\n      <label htmlFor=\"name\">Name:</label>\n     \n      <input\n        id=\"name\"\n        name=\"ProductName\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.name}\n      /> \n      {formik.errors.name &&formik.touched.name?<div><h7 style={{color: \"red\"}}>{formik.errors.name}</h7></div>:null}<br></br>\n\n        <label htmlFor=\"quantity\">Quantity</label>\n      <input\n        id=\"quantity\"\n        name=\"Quantity\"\n        type=\"number\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.quantity}\n      /> \n    {formik.errors.quantity&&formik.touched.quantity?<div><h7 style={{color: \"red\"}}>{formik.errors.quantity}</h7></div>:null}<br></br>\n        <label htmlFor=\"price\">Price</label>\n\n      <input\n        id=\"price\"\n        name=\"Price\"\n        type=\"number\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.price}\n      />\n     {formik.errors.price&&formik.touched.price?<div><h7 style={{color: \"red\"}}>{formik.errors.price}</h7></div>:null}\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n\n  \n};\nexport default Addproducts;"]},"metadata":{},"sourceType":"module"}