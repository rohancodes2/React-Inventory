{"ast":null,"code":"var _jsxFileName = \"/Users/rohan/capstone_project/src/components/Register.js\";\nimport React, { useState } from \"react\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport './Register.css';\nimport { useFormik, yupToFormErrors } from 'formik';\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { setUserSession } from \"../utils/mainUtils\";\n\nconst Register = props => {\n  const history = useHistory();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const validationSchema = Yup.object({\n    name: Yup.string().required('*Name is required'),\n    username: Yup.string().required('*Username is required'),\n    password: Yup.string().required('*Password is required'),\n    password1: Yup.string().required('* Re-enter Password'),\n    officeId: Yup.string().required('* Office Id required')\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      username: '',\n      password: '',\n      password1: '',\n      officeId: ''\n    },\n    onSubmit: values => {\n      console.log(values);\n\n      if (values.password != values.password1) {\n        alert('passwords dont match');\n      } else {\n        setError(null);\n        setLoading(true);\n        validateUser(values.username);\n        axios.post('http://localhost:3002/users', values).then(response => {\n          setLoading(false);\n          console.log(response.data.id); //   props.history.push('/dashboard');\n        }).catch(error => {\n          setLoading(false);\n          console.log(error);\n          if (error.response.status === 401) setError(error.response.data.message);else setError(\"Something went wrong. Please try again later.\");\n        }); // let x=JSON.stringify(values, null, 2);\n        //  ProductActions.addProduct(x)\n      }\n    },\n    validationSchema\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-group4\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      alignSelf: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 6\n    }\n  }, \"  Register \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 56\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }\n  }, \"Enter Name \"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control pro\",\n    id: \"name\",\n    name: \"name\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 8\n    }\n  }), formik.errors.name && formik.touched.name ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 48\n    }\n  }, /*#__PURE__*/React.createElement(\"h7\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 53\n    }\n  }, formik.errors.name)) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 117\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, \"Enter Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control pro textcolorx\",\n    id: \"username\",\n    name: \"username\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), formik.errors.username && formik.touched.username ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 56\n    }\n  }, /*#__PURE__*/React.createElement(\"h7\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 61\n    }\n  }, formik.errors.username)) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 129\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Enter Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control pro textcolorx\",\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), formik.errors.password && formik.touched.password ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 56\n    }\n  }, /*#__PURE__*/React.createElement(\"h7\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 61\n    }\n  }, formik.errors.password)) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 129\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, \"Re-enter Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control pro textcolorx\",\n    id: \"password1\",\n    name: \"password1\",\n    type: \"password1\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), formik.errors.password1 && formik.touched.password1 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(\"h7\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 63\n    }\n  }, formik.errors.password1)) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 132\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"officeId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, \"Enter Office ID\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control pro textcolorx\",\n    id: \"officeId\",\n    name: \"officeId\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.officeId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }), formik.errors.officeId && formik.touched.officeId ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 56\n    }\n  }, /*#__PURE__*/React.createElement(\"h7\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 61\n    }\n  }, formik.errors.officeId)) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 129\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-lg cbac text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/signIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, \"Back to Login\")));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(null, mapDispatchToProps)(Register);","map":{"version":3,"sources":["/Users/rohan/capstone_project/src/components/Register.js"],"names":["React","useState","Route","useHistory","useFormik","yupToFormErrors","Yup","connect","axios","setUserSession","Register","props","history","error","setError","loading","setLoading","validationSchema","object","name","string","required","username","password","password1","officeId","formik","initialValues","onSubmit","values","console","log","alert","validateUser","post","then","response","data","id","catch","status","message","handleSubmit","alignSelf","handleChange","handleBlur","errors","touched","color","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["\nimport React, { useState } from \"react\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport  './Register.css';\n  import { useFormik, yupToFormErrors } from 'formik';\n  import * as Yup from 'yup';\n  import {connect} from 'react-redux'\n  import axios from 'axios';\nimport { setUserSession } from \"../utils/mainUtils\";\n\n  const Register = (props) => {\n      const history = useHistory();\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const validationSchema = Yup.object(\n     {\n       name: Yup.string().required(\n            '*Name is required'\n        ),\n         username: Yup.string().required(\n             '*Username is required'\n         ),\n        password: Yup.string().required(\n          '*Password is required'\n         ),\n         password1: Yup.string().required(\n            '* Re-enter Password'\n           ),\n           officeId: Yup.string().required(\n            '* Office Id required'\n           ),\n     })\n    \n    const formik = useFormik({\n      initialValues:{\n          name:'',\n        username:'',\n        password:'',\n        password1:'',\n        officeId:''\n  \n      },\n      onSubmit: values => {\n        console.log(values)\n    if  (values.password!=values.password1)\n{   \n    alert('passwords dont match')\n   \n}else{\n\n        setError(null);\n        setLoading(true);\n        validateUser(values.username);\n        axios.post('http://localhost:3002/users',values).then(response => {\n          setLoading(false);\n          console.log(response.data.id) \n         \n       //   props.history.push('/dashboard');\n        }).catch(error => {\n          setLoading(false);\n          console.log(error);\n          if (error.response.status === 401) setError(error.response.data.message);\n          else setError(\"Something went wrong. Please try again later.\");\n        });\n      // let x=JSON.stringify(values, null, 2);\n     //  ProductActions.addProduct(x)\n      }},\n      validationSchema\n  \n    });\n   \n    return (\n      <div  className='main4'>\n          \n     <form className='form-group4'onSubmit={formik.handleSubmit}>\n     <h4 style={{alignSelf:'center'}} >  Register </h4><br></br>\n     <label htmlFor=\"name\">Enter Name </label>\n       <input\n        className='form-control pro'\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n        \n          \n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.name}\n        /> \n      {formik.errors.name&&formik.touched.name?<div><h7 style={{color: \"red\"}}>{formik.errors.name}</h7></div>:null}<br></br>\n      <label htmlFor=\"username\">Enter Username</label>\n        <input\n         className='form-control pro textcolorx'\n          id=\"username\"\n          name=\"username\"\n          type=\"text\"\n         \n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.username}\n        /> \n      {formik.errors.username&&formik.touched.username?<div><h7 style={{color: \"red\"}}>{formik.errors.username}</h7></div>:null}<br></br>\n       \n      \n      <label htmlFor=\"password\">Enter Password</label>\n        <input\n       className='form-control pro textcolorx'\n          id=\"password\"\n          name=\"password\"\n          type=\"password\" \n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password}\n        /> \n      {formik.errors.password&&formik.touched.password?<div><h7 style={{color: \"red\"}}>{formik.errors.password}</h7></div>:null}<br></br>\n      <label htmlFor=\"password1\">Re-enter Password</label>\n        <input\n        className='form-control pro textcolorx'\n          id=\"password1\"\n          name=\"password1\"\n          type=\"password1\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password1}\n        /> \n      {formik.errors.password1&&formik.touched.password1?<div><h7 style={{color: \"red\"}}>{formik.errors.password1}</h7></div>:null}<br></br>\n      <label htmlFor=\"officeId\">Enter Office ID</label>\n        <input\n        className='form-control pro textcolorx'\n          id=\"officeId\"\n          name=\"officeId\"\n          type=\"text\"\n       \n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.officeId}\n        /> \n      {formik.errors.officeId&&formik.touched.officeId?<div><h7 style={{color: \"red\"}}>{formik.errors.officeId}</h7></div>:null}<br></br>\n        <button type=\"submit\" className='btn btn-lg cbac text-white'>Register</button>\n        <a href='/signIn'>Back to Login</a>\n      </form>\n    \n      </div>\n    );\n  \n    \n  };\n  const mapDispatchToProps = dispatch =>{\n      return {\n     \n      }\n    }\n\n    export default connect(null,mapDispatchToProps)(Register)\n  \n\n\n"]},"metadata":{},"sourceType":"module"}