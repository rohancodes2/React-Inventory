{"ast":null,"code":"import { GET_PRODUCT, ADD_PRODUCT, INITIALIZE_PRODUCT, SET_PRODUCT, SIGN_IN, DELETE_PRODUCT, UPDATE_PRODUCT, UPDATE_USER } from '../Actions/Actions';\nimport store from '../Store';\nconst initialState = {\n  products: [],\n  product: [],\n  brands: [],\n  productTypes: [],\n  chartData: [],\n  auth: false\n};\n\nconst crudReducer = (state = initialState, actionCreator) => {\n  switch (actionCreator.type) {\n    case INITIALIZE_PRODUCT:\n      console.log('initialize product in reducer');\n      return {\n        products: actionCreator.products,\n        brands: Array.from(new Set(actionCreator.products.map(item => {\n          return item.manufacturer;\n        }))),\n        productTypes: Array.from(new Set(actionCreator.products.map(item => {\n          return item.productDescription;\n        }))),\n        chartData: actionCreator.chartData\n      };\n\n    case GET_PRODUCT:\n      console.log('get product in reducer');\n      return { ...state,\n        products: state.products\n      };\n\n    case SET_PRODUCT:\n      console.log('set product in reducer');\n      return { ...state,\n        product: actionCreator.product\n      };\n\n    case DELETE_PRODUCT:\n      return {\n        products: actionCreator.products\n      };\n\n    case SIGN_IN:\n      return { ...state,\n        auth: actionCreator.auth\n      };\n\n    case ADD_PRODUCT:\n      return { ...state,\n        products: state.products.concat(actionCreator.product)\n      };\n\n    case UPDATE_USER:\n      return { ...state\n      };\n\n    case UPDATE_PRODUCT:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default crudReducer;","map":{"version":3,"sources":["/Users/rohan/capstone_project/src/Redux/Reducers/CrudReducer.js"],"names":["GET_PRODUCT","ADD_PRODUCT","INITIALIZE_PRODUCT","SET_PRODUCT","SIGN_IN","DELETE_PRODUCT","UPDATE_PRODUCT","UPDATE_USER","store","initialState","products","product","brands","productTypes","chartData","auth","crudReducer","state","actionCreator","type","console","log","Array","from","Set","map","item","manufacturer","productDescription","concat"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,WAApB,EAAgCC,kBAAhC,EAAmDC,WAAnD,EAA+DC,OAA/D,EAAwEC,cAAxE,EAAuFC,cAAvF,EAAuGC,WAAvG,QAAyH,oBAAzH;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,MAAMC,YAAY,GAAC;AACnBC,EAAAA,QAAQ,EAAC,EADU;AAEnBC,EAAAA,OAAO,EAAC,EAFW;AAGnBC,EAAAA,MAAM,EAAC,EAHY;AAInBC,EAAAA,YAAY,EAAC,EAJM;AAKnBC,EAAAA,SAAS,EAAC,EALS;AAMnBC,EAAAA,IAAI,EAAE;AANa,CAAnB;;AAQC,MAAMC,WAAW,GAAE,CAACC,KAAK,GAACR,YAAP,EAAoBS,aAApB,KAAoC;AACpD,UAAOA,aAAa,CAACC,IAArB;AACI,SAAKjB,kBAAL;AAAyBkB,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AAA8C,aAAM;AACzEX,QAAAA,QAAQ,EAACQ,aAAa,CAACR,QADkD;AAEzEE,QAAAA,MAAM,EAACU,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQN,aAAa,CAACR,QAAd,CAAuBe,GAAvB,CAA4BC,IAAD,IAAQ;AAAC,iBAAOA,IAAI,CAACC,YAAZ;AAAyB,SAA7D,CAAR,CAAX,CAFkE;AAGzEd,QAAAA,YAAY,EAACS,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQN,aAAa,CAACR,QAAd,CAAuBe,GAAvB,CAA4BC,IAAD,IAAQ;AAAC,iBAAOA,IAAI,CAACE,kBAAZ;AAA+B,SAAnE,CAAR,CAAX,CAH4D;AAIzEd,QAAAA,SAAS,EAACI,aAAa,CAACJ;AAJiD,OAAN;;AAMvE,SAAKd,WAAL;AAAkBoB,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AAAsC,aAAM,EAC1D,GAAGJ,KADuD;AAE1DP,QAAAA,QAAQ,EAACO,KAAK,CAACP;AAF2C,OAAN;;AAIxD,SAAKP,WAAL;AAAkBiB,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AAAsC,aAAM,EAC1D,GAAGJ,KADuD;AAE1DN,QAAAA,OAAO,EAACO,aAAa,CAACP;AAFoC,OAAN;;AAIxD,SAAKN,cAAL;AAAqB,aAAM;AAEvBK,QAAAA,QAAQ,EAACQ,aAAa,CAACR;AAFA,OAAN;;AAIrB,SAAKN,OAAL;AAAc,aAAM,EACb,GAAGa,KADU;AAEbF,QAAAA,IAAI,EAACG,aAAa,CAACH;AAFN,OAAN;;AAId,SAAKd,WAAL;AAAkB,aAAO,EACxB,GAAGgB,KADqB;AAExBP,QAAAA,QAAQ,EAACO,KAAK,CAACP,QAAN,CAAemB,MAAf,CAAsBX,aAAa,CAACP,OAApC;AAFe,OAAP;;AAIlB,SAAKJ,WAAL;AAAkB,aAAO,EACrB,GAAGU;AADkB,OAAP;;AAGlB,SAAKX,cAAL;AAAqB,aAAO,EACxB,GAAGW;AADqB,OAAP;;AAGrB;AAAS,aAAOA,KAAP;AAjCb;AAmCH,CApCA;;AAqCD,eAAeD,WAAf","sourcesContent":["import {GET_PRODUCT,ADD_PRODUCT,INITIALIZE_PRODUCT,SET_PRODUCT,SIGN_IN, DELETE_PRODUCT,UPDATE_PRODUCT, UPDATE_USER} from '../Actions/Actions'\nimport store from '../Store';\n\nconst initialState={\nproducts:[],\nproduct:[],\nbrands:[],\nproductTypes:[],\nchartData:[],\nauth :false\n}\n const crudReducer =(state=initialState,actionCreator)=>{\n    switch(actionCreator.type){\n        case INITIALIZE_PRODUCT: console.log('initialize product in reducer'); return{\n            products:actionCreator.products,\n            brands:Array.from(new Set(actionCreator.products.map((item)=>{return item.manufacturer}))),\n            productTypes:Array.from(new Set(actionCreator.products.map((item)=>{return item.productDescription}))),\n            chartData:actionCreator.chartData\n        }\n        case GET_PRODUCT: console.log('get product in reducer');return{\n            ...state,\n            products:state.products\n        }\n        case SET_PRODUCT: console.log('set product in reducer');return{\n            ...state,\n            product:actionCreator.product\n        }\n        case DELETE_PRODUCT: return{\n           \n            products:actionCreator.products\n        }\n        case SIGN_IN: return{\n               ...state,\n               auth:actionCreator.auth\n        }\n        case ADD_PRODUCT :return {\n         ...state,\n         products:state.products.concat(actionCreator.product)\n        }\n        case UPDATE_USER :return {\n            ...state,\n           }\n        case UPDATE_PRODUCT :return {\n            ...state,\n           }\n        default: return state\n    }\n}\nexport default crudReducer;"]},"metadata":{},"sourceType":"module"}