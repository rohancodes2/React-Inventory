{"ast":null,"code":"var _jsxFileName = \"/Users/rohan/capstone_project/src/components/About.js\";\nimport React, { useState } from \"react\";\nimport { useHistory, Redirect, BrowserRouter as Router } from \"react-router-dom\";\nimport store from \"../Redux/Store\";\nimport { connect } from 'react-redux';\nimport { addProduct, getProduct } from \"../Redux/Actions/ActionCreators\";\nimport ProductList from \"./ProductList\";\nexport function About(props) {\n  let history = useHistory();\n\n  function handler() {\n    history.push('/products/view');\n  }\n\n  const [products, setproducts] = useState();\n  const [filteredProducts, filter] = useState([]);\n  const [search, setSearch] = useState(['']);\n\n  handleClick = () => {\n    let {\n      search\n    } = this.state;\n    console.log(this.state.filteredBooks);\n\n    if (search !== \"\") {\n      this.state.filteredBooks = this.state.books.filter(book => {\n        return book.props.name.toLowerCase().indexOf(this.state.search.toLowerCase().trim()) !== -1;\n      });\n    }\n\n    this.forceUpdate();\n    console.log(this.state.filteredBooks);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Hey About!\", /*#__PURE__*/React.createElement(ProductList, {\n    list: props.products,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, \"test redux\"));\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getProduct: () => dispatch(getProduct)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(About);","map":{"version":3,"sources":["/Users/rohan/capstone_project/src/components/About.js"],"names":["React","useState","useHistory","Redirect","BrowserRouter","Router","store","connect","addProduct","getProduct","ProductList","About","props","history","handler","push","products","setproducts","filteredProducts","filter","search","setSearch","handleClick","state","console","log","filteredBooks","books","book","name","toLowerCase","indexOf","trim","forceUpdate","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,EAAoBC,QAApB,EAA8BC,aAAa,IAAIC,MAA/C,QAA6D,kBAA7D;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,UAAR,EAAoBC,UAApB,QAAqC,iCAArC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAQ,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAC5B,MAAIC,OAAO,GAAGX,UAAU,EAAxB;;AACA,WAASY,OAAT,GAAkB;AAEhBD,IAAAA,OAAO,CAACE,IAAR,CAAa,gBAAb;AACD;;AACA,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBhB,QAAQ,EAArC;AACA,QAAM,CAACiB,gBAAD,EAAkBC,MAAlB,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACmB,MAAD,EAAQC,SAAR,IAAmBpB,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAjC;;AACAqB,EAAAA,WAAW,GAAG,MAAM;AACnB,QAAI;AAAEF,MAAAA;AAAF,QAAa,KAAKG,KAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWG,aAAvB;;AACA,QAAIN,MAAM,KAAK,EAAf,EAAmB;AACjB,WAAKG,KAAL,CAAWG,aAAX,GAA2B,KAAKH,KAAL,CAAWI,KAAX,CAAiBR,MAAjB,CAAyBS,IAAD,IAAU;AAC3D,eACEA,IAAI,CAAChB,KAAL,CAAWiB,IAAX,CACGC,WADH,GAEGC,OAFH,CAEW,KAAKR,KAAL,CAAWH,MAAX,CAAkBU,WAAlB,GAAgCE,IAAhC,EAFX,MAEuD,CAAC,CAH1D;AAKD,OAN0B,CAA3B;AAOD;;AACD,SAAKC,WAAL;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWG,aAAvB;AACD,GAdA;;AAiBD,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAEN,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAGd,KAAK,CAACI,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFM,eAGN;AAAQ,IAAA,OAAO,EAAEF,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHM,CAAR;AASD;;AACD,MAAMoB,eAAe,GAAGX,KAAK,IAAG;AAC9B,SAAO;AACLP,IAAAA,QAAQ,EAAEO,KAAK,CAACP;AADX,GAAP;AAGD,CAJD;;AAKA,MAAMmB,kBAAkB,GAAGC,QAAQ,IAAG;AACpC,SAAO;AACL3B,IAAAA,UAAU,EAAC,MAAI2B,QAAQ,CAAC3B,UAAD;AADlB,GAAP;AAGD,CAJD;;AAMA,eAAeF,OAAO,CAAC2B,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CxB,KAA5C,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory,Redirect, BrowserRouter as Router } from \"react-router-dom\";\nimport store from \"../Redux/Store\";\nimport { connect } from 'react-redux';\nimport {addProduct, getProduct} from \"../Redux/Actions/ActionCreators\"\nimport ProductList from \"./ProductList\";\nexport  function About(props) {\n  let history = useHistory();\n  function handler(){\n    \n    history.push('/products/view')\n  }\n   const [products,setproducts]=useState()\n   const [filteredProducts,filter]=useState([])\n   const [search,setSearch]=useState([''])\n   handleClick = () => {\n    let { search } = this.state;\n    console.log(this.state.filteredBooks);\n    if (search !== \"\") {\n      this.state.filteredBooks = this.state.books.filter((book) => {\n        return (\n          book.props.name\n            .toLowerCase()\n            .indexOf(this.state.search.toLowerCase().trim()) !== -1\n        );\n      });\n    }\n    this.forceUpdate();\n    console.log(this.state.filteredBooks);\n  };\n\n\n  return (<div>Hey About!\n      \n    <ProductList list ={props.products}></ProductList>\n    <button onClick={handler}>test redux</button>\n   \n  </div>);\n\n\n\n}\nconst mapStateToProps = state =>{\n  return {\n    products: state.products\n  }\n}\nconst mapDispatchToProps = dispatch =>{\n  return {\n    getProduct:()=>dispatch(getProduct)\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(About)"]},"metadata":{},"sourceType":"module"}