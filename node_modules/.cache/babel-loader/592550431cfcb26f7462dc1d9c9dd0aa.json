{"ast":null,"code":"var _jsxFileName = \"/Users/rohan/capstone_project/src/components/SignIn.js\";\nimport React, { useState } from \"react\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport { useFormik, yupToFormErrors } from 'formik';\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { setUserSession } from \"../utils/mainUtils\";\n\nconst SignIn = props => {\n  let history = useHistory();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const validationSchema = Yup.object({\n    username: Yup.string().required('*Username is required'),\n    password: Yup.string().required('*Password is required')\n  });\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    onSubmit: values => {\n      console.log(values);\n      setError(null);\n      setLoading(true);\n      axios.get(`http://localhost:3002/users?username=${values.username}&&password=${values.password}`).then(response => {\n        setLoading(false);\n        console.log();\n\n        if (response.data.id != undefined) {\n          setUserSession(response.data[0].id, response.data[0].username);\n          history.push('/products');\n        } else {} //   props.history.push('/dashboard');\n\n      }).catch(error => {\n        setLoading(false);\n        console.log(error);\n        if (error.response.status === 401) setError(error.response.data.message);else setError(\"Something went wrong. Please try again later.\");\n      }); // let x=JSON.stringify(values, null, 2);\n      //ProductActions.addProduct(x)\n    },\n    validationSchema\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 1000\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-group\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Username:\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"username\",\n    name: \"username\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), formik.errors.username && formik.touched.username ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 56\n    }\n  }, /*#__PURE__*/React.createElement(\"h7\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 61\n    }\n  }, formik.errors.username)) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 129\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 8\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), formik.errors.password && formik.touched.password ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 56\n    }\n  }, /*#__PURE__*/React.createElement(\"h7\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 61\n    }\n  }, formik.errors.password)) : null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 129\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Login\")));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nconst useFormInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  return {\n    value,\n    onChange: handleChange\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/rohan/capstone_project/src/components/SignIn.js"],"names":["React","useState","Route","useHistory","useFormik","yupToFormErrors","Yup","connect","axios","setUserSession","SignIn","props","history","error","setError","loading","setLoading","validationSchema","object","username","string","required","password","formik","initialValues","onSubmit","values","console","log","get","then","response","data","id","undefined","push","catch","status","message","width","handleSubmit","handleChange","handleBlur","errors","touched","color","mapDispatchToProps","dispatch","useFormInput","initialValue","value","setValue","e","target","onChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,kBAAlC;AACE,SAASC,SAAT,EAAoBC,eAApB,QAA2C,QAA3C;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACF,SAASC,cAAT,QAA+B,oBAA/B;;AAEE,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,MAAIC,OAAO,GAAGT,UAAU,EAAxB;AACF,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMgB,gBAAgB,GAAGX,GAAG,CAACY,MAAJ,CACxB;AACIC,IAAAA,QAAQ,EAAEb,GAAG,CAACc,MAAJ,GAAaC,QAAb,CACN,uBADM,CADd;AAIGC,IAAAA,QAAQ,EAAEhB,GAAG,CAACc,MAAJ,GAAaC,QAAb,CACR,uBADQ;AAJb,GADwB,CAAzB;AAUA,QAAME,MAAM,GAAGnB,SAAS,CAAC;AACvBoB,IAAAA,aAAa,EAAC;AACZL,MAAAA,QAAQ,EAAC,EADG;AAEZG,MAAAA,QAAQ,EAAC;AAFG,KADS;AAMvBG,IAAAA,QAAQ,EAAEC,MAAM,IAAI;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAZ,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAR,MAAAA,KAAK,CAACqB,GAAN,CAAW,wCAAuCH,MAAM,CAACP,QAAS,cAAaO,MAAM,CAACJ,QAAS,EAA/F,EAAkGQ,IAAlG,CAAuGC,QAAQ,IAAI;AACjHf,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAW,QAAAA,OAAO,CAACC,GAAR;;AACA,YAAGG,QAAQ,CAACC,IAAT,CAAcC,EAAd,IAAkBC,SAArB,EAA+B;AAC/BzB,UAAAA,cAAc,CAACsB,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBC,EAAlB,EAAsBF,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBb,QAAvC,CAAd;AACAP,UAAAA,OAAO,CAACuB,IAAR,CAAa,WAAb;AAA2B,SAF3B,MAE+B,CAE9B,CAPgH,CAQpH;;AACE,OATD,EASGC,KATH,CASSvB,KAAK,IAAI;AAChBG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACA,YAAIA,KAAK,CAACkB,QAAN,CAAeM,MAAf,KAA0B,GAA9B,EAAmCvB,QAAQ,CAACD,KAAK,CAACkB,QAAN,CAAeC,IAAf,CAAoBM,OAArB,CAAR,CAAnC,KACKxB,QAAQ,CAAC,+CAAD,CAAR;AACN,OAdD,EAJkB,CAmBpB;AACC;AACA,KA3BsB;AA4BvBG,IAAAA;AA5BuB,GAAD,CAAxB;AAgCA,sBACE;AAAK,IAAA,KAAK,EAAE;AAACsB,MAAAA,KAAK,EAAC;AAAP,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA4B,IAAA,QAAQ,EAAEhB,MAAM,CAACiB,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,eAEG;AACA,IAAA,SAAS,EAAC,cADV;AAEE,IAAA,EAAE,EAAC,UAFL;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,QAAQ,EAAEjB,MAAM,CAACkB,YALnB;AAME,IAAA,MAAM,EAAElB,MAAM,CAACmB,UANjB;AAOE,IAAA,KAAK,EAAEnB,MAAM,CAACG,MAAP,CAAcP,QAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,EAWEI,MAAM,CAACoB,MAAP,CAAcxB,QAAd,IAAwBI,MAAM,CAACqB,OAAP,CAAezB,QAAvC,gBAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAI,IAAA,KAAK,EAAE;AAAC0B,MAAAA,KAAK,EAAE;AAAR,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BtB,MAAM,CAACoB,MAAP,CAAcxB,QAA1C,CAAL,CAAhD,GAAoH,IAXtH,eAW2H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAX3H,eAaE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAcG;AACA,IAAA,SAAS,EAAC,cADV;AAEE,IAAA,EAAE,EAAC,UAFL;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,QAAQ,EAAEI,MAAM,CAACkB,YALnB;AAME,IAAA,MAAM,EAAElB,MAAM,CAACmB,UANjB;AAOE,IAAA,KAAK,EAAEnB,MAAM,CAACG,MAAP,CAAcJ,QAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdH,EAuBEC,MAAM,CAACoB,MAAP,CAAcrB,QAAd,IAAwBC,MAAM,CAACqB,OAAP,CAAetB,QAAvC,gBAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAI,IAAA,KAAK,EAAE;AAACuB,MAAAA,KAAK,EAAE;AAAR,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BtB,MAAM,CAACoB,MAAP,CAAcrB,QAA1C,CAAL,CAAhD,GAAoH,IAvBtH,eAuB2H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvB3H,eAwBG;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,wBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAxBH,CADC,CADF;AAgCD,CA9ED;;AA+EA,MAAMwB,kBAAkB,GAAGC,QAAQ,IAAG;AAClC,SAAO,EAAP;AAGD,CAJH;;AAKE,MAAMC,YAAY,GAAGC,YAAY,IAAI;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlD,QAAQ,CAACgD,YAAD,CAAlC;;AAEA,QAAMR,YAAY,GAAGW,CAAC,IAAI;AACxBD,IAAAA,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASH,KAAV,CAAR;AACD,GAFD;;AAGA,SAAO;AACLA,IAAAA,KADK;AAELI,IAAAA,QAAQ,EAAEb;AAFL,GAAP;AAID,CAVH;;AAWA,eAAelC,OAAO,CAAC,IAAD,EAAMuC,kBAAN,CAAP,CAAiCpC,MAAjC,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Route, useHistory } from \"react-router-dom\";\n  import { useFormik, yupToFormErrors } from 'formik';\n  import * as Yup from 'yup';\n  import {connect} from 'react-redux'\n  import axios from 'axios';\nimport { setUserSession } from \"../utils/mainUtils\";\n\n  const SignIn = (props) => {\n      let history = useHistory();\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const validationSchema = Yup.object(\n     {\n         username: Yup.string().required(\n             '*Username is required'\n         ),\n        password: Yup.string().required(\n          '*Password is required'\n         ),\n     })\n    \n    const formik = useFormik({\n      initialValues:{\n        username:'',\n        password:''\n  \n      },\n      onSubmit: values => {\n        console.log(values)\n        setError(null);\n        setLoading(true);\n        axios.get(`http://localhost:3002/users?username=${values.username}&&password=${values.password}`).then(response => {\n          setLoading(false);\n          console.log()\n          if(response.data.id!=undefined){\n          setUserSession(response.data[0].id, response.data[0].username)\n          history.push('/products');}else{\n\n          }\n       //   props.history.push('/dashboard');\n        }).catch(error => {\n          setLoading(false);\n          console.log(error);\n          if (error.response.status === 401) setError(error.response.data.message);\n          else setError(\"Something went wrong. Please try again later.\");\n        });\n      // let x=JSON.stringify(values, null, 2);\n       //ProductActions.addProduct(x)\n      },\n      validationSchema\n  \n    });\n   \n    return (\n      <div style={{width:1000}}>\n     <form className='form-group'onSubmit={formik.handleSubmit}>\n      <label htmlFor=\"username\">Username:</label>\n        <input\n        className='form-control'\n          id=\"username\"\n          name=\"username\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.username}\n        /> \n      {formik.errors.username&&formik.touched.username?<div><h7 style={{color: \"red\"}}>{formik.errors.username}</h7></div>:null}<br></br>\n       \n       <label htmlFor=\"password\">Password</label>\n        <input\n        className='form-control'\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password}\n        /> \n      {formik.errors.password&&formik.touched.password?<div><h7 style={{color: \"red\"}}>{formik.errors.password}</h7></div>:null}<br></br>\n        <button type=\"submit\" className='btn btn-primary btn-lg'>Login</button>\n      </form>\n      </div>\n    );\n  \n    \n  };\n  const mapDispatchToProps = dispatch =>{\n      return {\n     \n      }\n    }\n    const useFormInput = initialValue => {\n        const [value, setValue] = useState(initialValue);\n      \n        const handleChange = e => {\n          setValue(e.target.value);\n        }\n        return {\n          value,\n          onChange: handleChange\n        }\n      }\n    export default connect(null,mapDispatchToProps)(SignIn)\n  \n\n\n"]},"metadata":{},"sourceType":"module"}